version: '3.8' # Используем актуальную версию синтаксиса

services:
  # --- База данных ---
  mongodb:
    image: mongo:6.0 # Явно указываем версию образа MongoDB (например, 6.0 LTS). Избегаем 'latest' для баз данных.
    container_name: digital-egiz-mongo # Задаем имя контейнера для удобства
    restart: unless-stopped # Перезапускать контейнер, если он остановился не вручную
    networks:
      - ditto_network # Используем нашу сеть
    volumes:
      - mongodb_data:/data/db # Именованный volume для сохранения данных
    healthcheck: # Проверка готовности MongoDB перед стартом зависимых сервисов
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"] # Команда проверки
      interval: 10s # Интервал проверки
      timeout: 5s # Таймаут ожидания ответа
      retries: 5 # Количество попыток
      start_period: 30s # Время на первоначальный запуск перед началом проверок

  # --- Основные сервисы Ditto ---
  ditto-policies:
    image: eclipse/ditto-policies:3.6.0 # Явно указываем версию образа Ditto
    container_name: digital-egiz-policies
    restart: unless-stopped
    networks:
      - ditto_network
    depends_on:
      mongodb: # Зависит от MongoDB (и ждет его healthcheck)
        condition: service_healthy # Ждать успешного healthcheck MongoDB

  ditto-things:
    image: eclipse/ditto-things:3.6.0 # Явно указываем версию образа Ditto
    container_name: digital-egiz-things
    restart: unless-stopped
    networks:
      - ditto_network
    depends_on:
      mongodb:
        condition: service_healthy

  ditto-things-search:
    image: eclipse/ditto-things-search:3.6.0 # Явно указываем версию образа Ditto
    container_name: digital-egiz-things-search
    restart: unless-stopped
    networks:
      - ditto_network
    depends_on:
      mongodb:
        condition: service_healthy

  ditto-gateway:
    image: eclipse/ditto-gateway:3.6.0 # Явно указываем версию образа Ditto
    container_name: digital-egiz-gateway
    restart: unless-stopped
    networks:
      - ditto_network
    depends_on:
      # Зависит от основных сервисов (но не ждет их healthcheck, т.к. они могут стартовать параллельно)
      - ditto-policies
      - ditto-things
      - ditto-things-search
      mongodb: # Но точно ждет MongoDB
        condition: service_healthy

  ditto-connectivity:
    image: eclipse/ditto-connectivity:3.6.0 # Явно указываем версию образа Ditto
    container_name: digital-egiz-connectivity
    restart: unless-stopped
    networks:
      - ditto_network
    depends_on:
      - ditto-gateway # Зависит от Gateway

  # --- Точка входа (API) ---
  ditto-nginx:
    image: eclipse/ditto-nginx:3.6.0 # Явно указываем версию образа Ditto Nginx
    container_name: digital-egiz-nginx
    restart: unless-stopped
    ports:
      - "8080:8080" # Публикуем порт 8080 хоста -> 8080 контейнера
    networks:
      - ditto_network
    depends_on: # Зависит от всех ключевых сервисов Ditto, чтобы принимать трафик
      - ditto-gateway
      - ditto-connectivity
      # Не обязательно жестко ждать policies/things/search, Nginx проксирует к Gateway

# --- Именованные тома для хранения данных ---
volumes:
  mongodb_data: # Имя volume должно совпадать с тем, что указано в сервисе mongodb
    driver: local # Стандартный драйвер Docker для хранения на хосте

# --- Сеть для взаимодействия контейнеров ---
networks:
  ditto_network: # Имя сети должно совпадать с тем, что указано в сервисах
    driver: bridge # Стандартный сетевой драйвер Docker
    name: digital-egiz-network # Явно задаем имя сети на хосте для избежания конфликтов